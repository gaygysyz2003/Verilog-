`timescale 1ns / 1ps
`default_nettype none

module carry_lookahead_4bit(Cout, S, X, Y, Cin);

    // Input and output ports of carry 4-bit unit
    output wire Cout;            // for C[4]
    output wire [3:0] S;         // Final 4-bit sum output
    input wire [3:0] X, Y;       // 4-bit addends
    input wire Cin;              // input carry C0

    // Intermediate nets
    wire [3:0] G, P;
    wire [4:1] C;

    generate_propagate_unit #2 GPU0 (G[0], P[0], X[0], Y[0]);
    generate_propagate_unit #2 GPU1 (G[1], P[1], X[1], Y[1]);
    generate_propagate_unit #2 GPU2 (G[2], P[2], X[2], Y[2]);
    generate_propagate_unit #2 GPU3 (G[3], P[3], X[3], Y[3]);

    carry_lookahead_unit #2 CLU0 (C, G, P, Cin);
    assign Cout = C[4];

    summation_unit #2 SU0 (S[0], P[0], Cin);
    summation_unit #2 SU1 (S[1], P[1], C[1]);
    summation_unit #2 SU2 (S[2], P[2], C[2]);
    summation_unit #2 SU3 (S[3], P[3], C[3]);

endmodule
