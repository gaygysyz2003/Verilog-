default_nettype none
module add_ sub (Sum, Overflow, opa, opB, opSel);
  output wire [3:0) Sum; output wire Overflow;
  input wire [3:0) opA, opB;
  input wire opSel;

  wire (3:0) notB;
  wire co, cl, c2, C3;

  assign notB[0] = opB[0] ^ opSel;
  assign notB[1] = opB[1] ^ opSel;
  assign notB[2] = opB[2] ^ opSel;
  assign notB[3] = opB[3] ^ opSel;


  full_adder adderO(Sum[0], co, opA[0], notB[0], opSel):
  full_adder adderl (Sum[ll, cl, opa[l], notB[l], c0);
  full_adder adder2(Sum(2), c2, opA[2], notB[2], cl);
  full_adder adder3(Sum[31, c3, opA[3], notB(3], c2);

  assign Overflow = c2 ^ c3;
endmodule
